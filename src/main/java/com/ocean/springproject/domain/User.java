package com.ocean.springproject.domain;
// Generated Jan 19, 2019 2:36:33 PM by Hibernate Tools 5.0.6.Final

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name = "user")
public class User implements java.io.Serializable {

    /**
     *
     */
    private static final long serialVersionUID = 1L;

    private int id;
    private String email;
    private String passwordHash;
    private String fullName;
    private Boolean isEmailConfirm;
    private String phoneNumber;
    private String tfaSecret;
    private String activationCode;
    private Integer loginFailCount;
    private Date lastLoginFailTime;
    private boolean isEnableTfa;
    private boolean isEnableTfaLogin;
    private Set<UserRole> userRoles = new HashSet<UserRole>(0);

    public User() {
    }

    public User(int id, String email, String passwordHash, String fullName, boolean isEnableTfa,
                boolean isEnableTfaLogin) {
        this.id = id;
        this.email = email;
        this.passwordHash = passwordHash;
        this.fullName = fullName;
        this.isEnableTfa = isEnableTfa;
        this.isEnableTfaLogin = isEnableTfaLogin;
    }

    public User(int id, String email, String passwordHash, String fullName, Boolean isEmailConfirm, String phoneNumber,
                String tfaSecret, String activationCode, Integer loginFailCount, Date lastLoginFailTime,
                boolean isEnableTfa, boolean isEnableTfaLogin, Set<UserRole> userRoles) {
        this.id = id;
        this.email = email;
        this.passwordHash = passwordHash;
        this.fullName = fullName;
        this.isEmailConfirm = isEmailConfirm;
        this.phoneNumber = phoneNumber;
        this.tfaSecret = tfaSecret;
        this.activationCode = activationCode;
        this.loginFailCount = loginFailCount;
        this.lastLoginFailTime = lastLoginFailTime;
        this.isEnableTfa = isEnableTfa;
        this.isEnableTfaLogin = isEnableTfaLogin;
        this.userRoles = userRoles;
    }

    @Id

    @Column(name = "id", unique = true, nullable = false)
    public int getId() {
        return this.id;
    }

    public void setId(int id) {
        this.id = id;
    }

    @Column(name = "email", nullable = false)
    public String getEmail() {
        return this.email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    @Column(name = "password_hash", nullable = false, length = 4000)
    public String getPasswordHash() {
        return this.passwordHash;
    }

    public void setPasswordHash(String passwordHash) {
        this.passwordHash = passwordHash;
    }

    @Column(name = "full_name", nullable = false)
    public String getFullName() {
        return this.fullName;
    }

    public void setFullName(String fullName) {
        this.fullName = fullName;
    }

    @Column(name = "is_email_confirm")
    public Boolean getIsEmailConfirm() {
        return this.isEmailConfirm;
    }

    public void setIsEmailConfirm(Boolean isEmailConfirm) {
        this.isEmailConfirm = isEmailConfirm;
    }

    @Column(name = "phone_number", length = 20)
    public String getPhoneNumber() {
        return this.phoneNumber;
    }

    public void setPhoneNumber(String phoneNumber) {
        this.phoneNumber = phoneNumber;
    }

    @Column(name = "tfa_secret", length = 500)
    public String getTfaSecret() {
        return this.tfaSecret;
    }

    public void setTfaSecret(String tfaSecret) {
        this.tfaSecret = tfaSecret;
    }

    @Column(name = "activation_code")
    public String getActivationCode() {
        return this.activationCode;
    }

    public void setActivationCode(String activationCode) {
        this.activationCode = activationCode;
    }

    @Column(name = "login_fail_count")
    public Integer getLoginFailCount() {
        return this.loginFailCount;
    }

    public void setLoginFailCount(Integer loginFailCount) {
        this.loginFailCount = loginFailCount;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "last_login_fail_time", length = 26)
    public Date getLastLoginFailTime() {
        return this.lastLoginFailTime;
    }

    public void setLastLoginFailTime(Date lastLoginFailTime) {
        this.lastLoginFailTime = lastLoginFailTime;
    }

    @Column(name = "is_enable_tfa", nullable = false)
    public boolean isIsEnableTfa() {
        return this.isEnableTfa;
    }

    public void setIsEnableTfa(boolean isEnableTfa) {
        this.isEnableTfa = isEnableTfa;
    }

    @Column(name = "is_enable_tfa_login", nullable = false)
    public boolean isIsEnableTfaLogin() {
        return this.isEnableTfaLogin;
    }

    public void setIsEnableTfaLogin(boolean isEnableTfaLogin) {
        this.isEnableTfaLogin = isEnableTfaLogin;
    }

    @OneToMany(fetch = FetchType.EAGER, mappedBy = "user")
    public Set<UserRole> getUserRoles() {
        return this.userRoles;
    }

    public void setUserRoles(Set<UserRole> userRoles) {
        this.userRoles = userRoles;
    }

}
